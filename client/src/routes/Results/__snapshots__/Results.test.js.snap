// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Results renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Results
    repositoryStore={
        RepositoryStore {
            "error": null,
            "isFetching": false,
            "query": "",
            "results": ObservableArray [],
            "resultsSortBy": "relevance",
            "resultsSortOrder": "asc",
            "sortByStars": false,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <p
        className="results__message"
>
        No results to display
</p>,
      "className": "results",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "No results to display",
        "className": "results__message",
      },
      "ref": null,
      "rendered": "No results to display",
      "type": "p",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <p
          className="results__message"
>
          No results to display
</p>,
        "className": "results",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "No results to display",
          "className": "results__message",
        },
        "ref": null,
        "rendered": "No results to display",
        "type": "p",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
